#BlueJ class context
comment0.target=Movie
comment0.text=\n\ Represents\ an\ object\ of\ type\ Movie.\n\ A\ Movie\ object\ has\ a\ title,\ some\ Actors,\ and\ results\ for\ the\ twelve\ Bechdel\ tests.\n\n\ @author\ (Stella\ K.)\ &\ sooahnlee\ &\ maya\ lu-heda\ &\ emily\ zhu\n\ @version\ (12/10/22)\n
comment1.params=movieTitle
comment1.target=Movie(java.lang.String)
comment1.text=\n\ Constructor\ for\ Movie\n
comment10.params=
comment10.target=java.lang.String\ toString()
comment10.text=\n\ Returns\ a\ String\ representation\ of\ this\ Movie\n\ @return\ \ a\ reasonable\ string\ representation\ of\ this\ movie\:\ includes\ the\ title\ and\ the\ number\n\ of\ actors\ who\ played\ in\ it.\n
comment11.params=args
comment11.target=void\ main(java.lang.String[])
comment11.text=\n\ Main\ method\ for\ testing\ this\ class\n
comment2.params=
comment2.target=java.lang.String\ getTitle()
comment2.text=\n\ Getter\ for\ the\ movie's\ title;\ Returns\ the\ movie's\ title\n\ @return\ \ The\ title\ of\ this\ movie\n
comment3.params=
comment3.target=java.util.LinkedList\ getActors()
comment3.text=\n\ Getter;\ Returns\ a\ Linked\ List\ with\ all\ the\ actor\ names\ who\ played\ in\ this\ movie\n\ @return\ \ A\ LinkedList\ with\ the\ names\ of\ all\ the\ actors\ who\ played\ in\ this\ movie\n
comment4.params=
comment4.target=java.util.Hashtable\ getAllActors()
comment4.text=\n\ Getter;\ Returns\ the\ movie's\ actors\ in\ a\ Hashtable\n\ @return\ \ A\ Hashtable\ with\ all\ the\ actors\ who\ played\ in\ this\ movie\n
comment5.params=
comment5.target=java.util.Vector\ getAllTestResults()
comment5.text=\n\ Getter;\ returns\ a\ Vector\ with\ all\ the\ Bechdel\ test\ results\ for\ this\ movie\n\ @return\ \ A\ Vector\ with\ the\ Bechdel\ test\ results\ for\ this\ movie\:\ A\ test\ result\ can\ be\ "1"\ or\ "0"\n\ indicating\ that\ this\ move\ passed\ or\ did\ not\ pass\ the\ corresponding\ test.\n
comment6.params=results
comment6.target=void\ setTestResults(java.lang.String)
comment6.text=\n\ Setter;\ Populates\ the\ testResults\ vector\ with\ "0"\ and\ "1"s,\ each\ representing\ the\ result\ of\n\ the\ coresponding\ test\ on\ this\ movie.\ This\ information\ will\ be\ read\ from\ the\ file\n\ "nextBechdel_allTests.csv"\n\ @param\ \ \ A\ -\ string\ consisting\ of\ of\ 0's\ and\ 1's.\ Each\ one\ of\ these\ values\ denotes\ the\ result\n\ of\ the\ corresponding\ test\ on\ this\ movie\n
comment7.params=other
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\n\ Tests\ this\ movie\ object\ with\ the\ input\ one\ and\ determines\ whether\ they\ are\ equal.\n\ \n\ @return\ true\ if\ both\ objects\ are\ movies\ and\ have\ the\ same\ title,\ \n\ false\ in\ any\ other\ case.\n
comment8.params=line
comment8.target=Actor\ addOneActor(java.lang.String)
comment8.text=\n\ Takes\ in\ a\ String,\ formatted\ as\ lines\ are\ in\ the\ input\ file\ ("nextBechdel_castGender.txt"),\n\ generates\ an\ Actor,\ and\ adds\ the\ object\ to\ the\ actors\ of\ this\ movie.\ Input\ String\ has\ the\n\ following\ formatting\:\ "ACTOR","CHARACTER_NAME","TYPE","BILLING","GENDER"\ Example\ of\ input\:\n\ "Trolls","Ricky\ Dillon","Aspen\ Heitz","Supporting","18","Male"\n\ \n\ @param\ \ \ A\ -\ String\ representing\ the\ information\ of\ each\ Actor\n\ @return\ \ The\ Actor\ that\ was\ just\ added\ to\ this\ movie\n
comment9.params=actorsFile
comment9.target=void\ addAllActors(java.lang.String)
comment9.text=\n\ Reads\ the\ input\ file\ ("nextBechdel_castGender.txt"),\ and\ adds\ all\ its\ Actors\ to\ this\ movie.\n\ Each\ line\ in\ the\ movie\ has\ the\ following\ formatting\:\ Input\ String\ has\ the\ following\ formatting\:\n\ "MOVIE\ TITLE","ACTOR","CHARACTER_NAME","TYPE","BILLING","GENDER"\ Example\ of\ input\:\ "Trolls"\n\ "Ricky\ Dillon","Aspen\ Heitz","Supporting","18","Male"\n\ \n\ @param\ \ \ actorsFile\ -\ The\ file\ containing\ information\ on\ each\ actor\ who\ acted\ in\ the\ movie.\n
numComments=12
